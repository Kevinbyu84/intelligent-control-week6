Analisis dan Diskusi
Analisis Hasil:
•	Seberapa Baik Deteksi Jalur dengan Instance Segmentation dibandingkan Canny?
Instance segmentation, seperti yang diterapkan dalam YOLOv8-seg, secara umum lebih unggul dibandingkan Canny Edge Detection dalam mendeteksi jalur rel karena mampu membedakan antara berbagai objek dalam gambar dan menghasilkan segmentasi yang lebih akurat. Sementara Canny hanya mendeteksi tepi tanpa memahami konteks objek, YOLOv8-seg dapat mengenali rel sebagai suatu entitas dengan segmentasi yang lebih presisi. Namun, Canny lebih cepat dan ringan dibandingkan model deep learning seperti YOLOv8-seg, sehingga lebih cocok untuk aplikasi real-time dengan keterbatasan komputasi.
•	Apakah Kombinasi Kedua Metode Dapat Meningkatkan Akurasi?
Ya, kombinasi Canny Edge Detection dan Instance Segmentation berpotensi meningkatkan akurasi. Canny dapat digunakan sebagai tahap pre-processing untuk menyoroti fitur tepi rel sebelum digunakan sebagai input bagi model YOLOv8-seg. Teknik ini dapat membantu meningkatkan kontras dan mengurangi noise pada input, sehingga model deep learning dapat lebih fokus pada fitur yang relevan. Pendekatan ini juga dapat digunakan untuk validasi hasil segmentasi, dengan membandingkan hasil YOLOv8-seg dengan hasil Canny untuk mengurangi kesalahan deteksi.
•	Apa Dampak Perubahan Parameter Canny (Thresholds) terhadap Hasil Deteksi?
Canny Edge Detection menggunakan dua parameter threshold:
Lower threshold: Jika nilai gradien piksel lebih rendah dari threshold ini, piksel diabaikan.
Upper threshold: Jika nilai gradien piksel lebih tinggi dari threshold ini, piksel dianggap sebagai tepi yang kuat.
Jika threshold terlalu rendah, terlalu banyak tepi yang terdeteksi, menghasilkan noise dan artefak yang tidak diinginkan. Sebaliknya, jika threshold terlalu tinggi, banyak tepi penting bisa hilang, sehingga rel mungkin tidak terdeteksi dengan baik. Pengaturan threshold yang optimal bergantung pada kondisi pencahayaan dan kontras gambar.

Diskusi:
•	Kapan Lebih Baik Menggunakan Canny Edge Detection dibanding Instance Segmentation?
Jika komputasi terbatas: Canny lebih cepat dan ringan, cocok untuk sistem dengan keterbatasan hardware.
Jika lingkungan pencahayaan konstan: Canny bekerja dengan baik pada gambar dengan kontras tinggi tanpa banyak noise.
Jika kebutuhan hanya deteksi tepi: Misalnya, dalam aplikasi pemrosesan gambar sederhana tanpa perlu memahami konteks objek.
•	Bagaimana Cara Meningkatkan Deteksi Jalur dengan Tuning Parameter YOLOv8-seg?
Menggunakan dataset berkualitas tinggi: Dataset harus memiliki anotasi yang akurat dengan variasi kondisi pencahayaan, perspektif, dan lingkungan.
Augmentasi data: Menambahkan augmentasi seperti brightness adjustment, rotation, dan blur dapat meningkatkan ketahanan model terhadap kondisi yang berbeda.
Fine-tuning model: Menggunakan transfer learning dengan dataset khusus rail segmentation dapat meningkatkan akurasi model YOLOv8-seg.
•	Bagaimana Metode Ini Dapat Diterapkan dalam Sistem Navigasi Kereta Otomatis?
Deteksi dan Segmentasi Jalur: Menggunakan instance segmentation untuk mengidentifikasi jalur rel secara real-time.
Peringatan Dini terhadap Hambatan: Mendeteksi objek di atas rel seperti batu, manusia, atau kendaraan untuk mencegah kecelakaan.
Navigasi Otomatis: Informasi dari YOLOv8-seg dapat dikombinasikan dengan sensor lain (misalnya LiDAR, IMU) untuk menentukan posisi dan arah pergerakan kereta otomatis.
Maintenance Prediktif: Menganalisis kondisi rel dari hasil segmentasi untuk mendeteksi kerusakan sebelum terjadi kegagalan.
